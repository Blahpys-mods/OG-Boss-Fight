;;-*-Lisp-*-
(in-package goal)

;; This file will define attacks to be used by the boss

;; ##########################################################
;; ##########################################################
;; ##########################################################
;; ATTACK-SQUARE ############################################
;; ##########################################################
;; ##########################################################
;; ##########################################################
;; attack-square is a heavily modified copy of caveflamepots from maincave-obs.gc
;; It is the attack type that covers an entire square.

(deftype attack-square (process-drawable)
  (
    (cshape              collide-shape :overlay-at root)
    (shove-up            float)
    (was-deadly?         symbol)
    (should-play-sound?  symbol)
    (launch-pos          vector :inline)
    (launch-pos-2        vector :inline)
    (launch-pos-3        vector :inline)
    (launch-pos-4        vector :inline)
  )
  (:states
    attack-square-active
    attack-square-inactive
  )
)

(deftype eco-orb (process-drawable)
  (
    (cshape              collide-shape :overlay-at root)
    (shove-up            float)
    (was-deadly?         symbol)
    (should-play-sound?  symbol)
    (eco-type            uint32) ;; 1: yellow, 2: red, 3: blue
    (orb-sated?          symbol)
    (orb-engorged?       symbol)
  )
  (:states
    eco-orb-inactive
    eco-orb-active
    eco-orb-exploding
  )
)

(deftype chess-piece (process-drawable)
  (
    (cshape              collide-shape :overlay-at root)
    (shove-up            float)
    (was-deadly?         symbol)
    (should-play-sound?  symbol)
    (piece-type          uint32) ;; 0: null, 1: knight, 2: bishop, 3: rook, 4: queen
  )
  (:states
    chess-piece-inactive
    ;;chess-piece-active
    chess-piece-attacking
  )
)